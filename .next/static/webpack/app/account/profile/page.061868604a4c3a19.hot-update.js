"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/account/profile/page",{

/***/ "(app-pages-browser)/./app/_lib/data-service.js":
/*!**********************************!*\
  !*** ./app/_lib/data-service.js ***!
  \**********************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createGuest: function() { return /* binding */ createGuest; },\n/* harmony export */   getBookedDatesByCabinId: function() { return /* binding */ getBookedDatesByCabinId; },\n/* harmony export */   getBooking: function() { return /* binding */ getBooking; },\n/* harmony export */   getBookings: function() { return /* binding */ getBookings; },\n/* harmony export */   getCabin: function() { return /* binding */ getCabin; },\n/* harmony export */   getCabinPrice: function() { return /* binding */ getCabinPrice; },\n/* harmony export */   getCabins: function() { return /* binding */ getCabins; },\n/* harmony export */   getCountries: function() { return /* binding */ getCountries; },\n/* harmony export */   getGuest: function() { return /* binding */ getGuest; },\n/* harmony export */   getSettings: function() { return /* binding */ getSettings; }\n/* harmony export */ });\n/* harmony import */ var next_navigation__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/navigation */ \"(app-pages-browser)/./node_modules/next/dist/api/navigation.js\");\n/* harmony import */ var _barrel_optimize_names_eachDayOfInterval_date_fns__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! __barrel_optimize__?names=eachDayOfInterval!=!date-fns */ \"(app-pages-browser)/./node_modules/date-fns/eachDayOfInterval.js\");\n/* harmony import */ var _supabase__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./supabase */ \"(app-pages-browser)/./app/_lib/supabase.js\");\n\n\n\n/////////////\n// GET\nasync function getCabin(id) {\n    const { data, error } = await _supabase__WEBPACK_IMPORTED_MODULE_1__.supabase.from(\"cabins\").select(\"*\").eq(\"id\", id).single();\n    // For testing\n    // await new Promise((res) => setTimeout(res, 2000));\n    if (error) {\n        console.error(error);\n        (0,next_navigation__WEBPACK_IMPORTED_MODULE_0__.notFound)();\n    }\n    return data;\n}\nasync function getCabinPrice(id) {\n    const { data, error } = await _supabase__WEBPACK_IMPORTED_MODULE_1__.supabase.from(\"cabins\").select(\"regularPrice, discount\").eq(\"id\", id).single();\n    if (error) {\n        console.error(error);\n    }\n    return data;\n}\nconst getCabins = async function() {\n    const { data, error } = await _supabase__WEBPACK_IMPORTED_MODULE_1__.supabase.from(\"cabins\").select(\"id, name, maxCapacity, regularPrice, discount, image\").order(\"name\");\n    // For testing\n    // await new Promise((res) => setTimeout(res, 2000));\n    if (error) {\n        console.error(error);\n        throw new Error(\"Cabins could not be loaded\");\n    }\n    return data;\n};\n// Guests are uniquely identified by their email address\nasync function getGuest(email) {\n    const { data, error } = await _supabase__WEBPACK_IMPORTED_MODULE_1__.supabase.from(\"guests\").select(\"*\").eq(\"email\", email).single();\n    // No error here! We handle the possibility of no guest in the sign in callback\n    return data;\n}\nasync function getBooking(id) {\n    const { data, error, count } = await _supabase__WEBPACK_IMPORTED_MODULE_1__.supabase.from(\"bookings\").select(\"*\").eq(\"id\", id).single();\n    if (error) {\n        console.error(error);\n        throw new Error(\"Booking could not get loaded\");\n    }\n    return data;\n}\nasync function getBookings(guestId) {\n    const { data, error, count } = await _supabase__WEBPACK_IMPORTED_MODULE_1__.supabase.from(\"bookings\")// We actually also need data on the cabins as well. But let's ONLY take the data that we actually need, in order to reduce downloaded data.\n    .select(\"id, created_at, startDate, endDate, numNights, numGuests, totalPrice, guestId, cabinId, cabins(name, image)\").eq(\"guestId\", guestId).order(\"startDate\");\n    if (error) {\n        console.error(error);\n        throw new Error(\"Bookings could not get loaded\");\n    }\n    return data;\n}\nasync function getBookedDatesByCabinId(cabinId) {\n    let today = new Date();\n    today.setUTCHours(0, 0, 0, 0);\n    today = today.toISOString();\n    // Getting all bookings\n    const { data, error } = await _supabase__WEBPACK_IMPORTED_MODULE_1__.supabase.from(\"bookings\").select(\"*\").eq(\"cabinId\", cabinId).or(\"startDate.gte.\".concat(today, \",status.eq.checked-in\"));\n    if (error) {\n        console.error(error);\n        throw new Error(\"Bookings could not get loaded\");\n    }\n    // Converting to actual dates to be displayed in the date picker\n    const bookedDates = data.map((booking)=>{\n        return (0,_barrel_optimize_names_eachDayOfInterval_date_fns__WEBPACK_IMPORTED_MODULE_2__.eachDayOfInterval)({\n            start: new Date(booking.startDate),\n            end: new Date(booking.endDate)\n        });\n    }).flat();\n    return bookedDates;\n}\nasync function getSettings() {\n    const { data, error } = await _supabase__WEBPACK_IMPORTED_MODULE_1__.supabase.from(\"settings\").select(\"*\").single();\n    // await new Promise((res) => setTimeout(res, 5000));\n    if (error) {\n        console.error(error);\n        throw new Error(\"Settings could not be loaded\");\n    }\n    return data;\n}\nasync function getCountries() {\n    try {\n        const res = await fetch(\"https://restcountries.com/v2/all?fields=name,flag\");\n        const countries = await res.json();\n        return countries;\n    } catch (e) {\n        throw new Error(\"Could not fetch countries\");\n    }\n}\n/////////////\n// CREATE\nasync function createGuest(newGuest) {\n    const { data, error } = await _supabase__WEBPACK_IMPORTED_MODULE_1__.supabase.from(\"guests\").insert([\n        newGuest\n    ]);\n    if (error) {\n        console.error(error);\n        throw new Error(\"Guest could not be created\");\n    }\n    return data;\n} /*\nexport async function createBooking(newBooking) {\n  const { data, error } = await supabase\n    .from(\"bookings\")\n    .insert([newBooking])\n    // So that the newly created object gets returned!\n    .select()\n    .single();\n\n  if (error) {\n    console.error(error);\n    throw new Error(\"Booking could not be created\");\n  }\n\n  return data;\n}\n*/  /////////////\n // UPDATE\n /*\n// The updatedFields is an object which should ONLY contain the updated data\nexport async function updateGuest(id, updatedFields) {\n  const { data, error } = await supabase\n    .from(\"guests\")\n    .update(updatedFields)\n    .eq(\"id\", id)\n    .select()\n    .single();\n\n  if (error) {\n    console.error(error);\n    throw new Error(\"Guest could not be updated\");\n  }\n  return data;\n}\n\nexport async function updateBooking(id, updatedFields) {\n  const { data, error } = await supabase\n    .from(\"bookings\")\n    .update(updatedFields)\n    .eq(\"id\", id)\n    .select()\n    .single();\n\n  if (error) {\n    console.error(error);\n    throw new Error(\"Booking could not be updated\");\n  }\n  return data;\n}\n\n/////////////\n// DELETE\n\nexport async function deleteBooking(id) {\n  const { data, error } = await supabase.from(\"bookings\").delete().eq(\"id\", id);\n\n  if (error) {\n    console.error(error);\n    throw new Error(\"Booking could not be deleted\");\n  }\n  return data;\n}\n*/ \n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./app/_lib/data-service.js\n"));

/***/ })

});